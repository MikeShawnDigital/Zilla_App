{"version":3,"sources":["components/Header.js","components/Quotes.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Header","className","Quotes","useState","quote","setQuote","useEffect","a","fetch","then","res","json","data","Math","floor","random","length","fetchQuote","text","author","TodoForm","props","edit","value","input","setInput","inputRef","useRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30bb4dfe.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            <h1 className=\"zilla\">Note Zilla</h1>\n        </div>\n    )\n}\n\nexport default Header\n\n","import { useEffect, useState } from \"react\";\n\n\n\n\nfunction Quotes() {\n  const [quote, setQuote] = useState('');\n\n\n  \n  //Fetch api for quotes\n  useEffect(() => {\n    const fetchQuote = async () => {\n      await fetch(\"https://type.fit/api/quotes\")\n        .then((res) => res.json())\n        .then((data) =>\n          setQuote(data[Math.floor(Math.random() * (data.length - 1))])\n        );\n    };\n    fetchQuote();\n  }, []);\n\n  return (\n    <center>\n    <div className=\"quote\">\n      <i className=\"quote__text\">{quote.text}</i>\n      <p className=\"quote__author\">{quote.author}</p>\n     </div>\n    </center>\n  );\n}\n\nexport default Quotes;\n","import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\n\n\n\n\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\n\n\nfunction TodoList() {\n\n  \n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n       \n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Quotes from './components/Quotes';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n        <Header />\n       <Quotes />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}